name: Deploy to Vercel
description: Deploy to Vercel
inputs:
  VERCEL_PROJECT_ID:
    description: Vercel project ID
    required: true
  VERCEL_TOKEN:
    description: Vercel token
    required: true
  ENVIRONMENT:
    description: Environment
    required: true

runs:
  using: composite
  steps:
    - name: Debug Environment
      shell: bash
      run: |
        echo "Working directory: $(pwd)"
        echo "Project ID: ${{ inputs.VERCEL_PROJECT_ID }}"
        echo "Environment: ${{ inputs.ENVIRONMENT }}"

    - name: Clean Vercel Cache
      shell: bash
      run: |
        echo "Cleaning .vercel directory..."
        rm -rf .vercel
        echo "Creating fresh .vercel directory..."
        mkdir -p .vercel

    - name: Install Vercel CLI
      shell: bash
      run: |
        echo "Installing Vercel CLI..."
        npm install -g vercel@latest
        vercel --version

    - name: Verify Vercel Authentication
      shell: bash
      env:
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
      run: |
        echo "Verifying Vercel authentication..."
        vercel whoami --token $VERCEL_TOKEN

    - name: Initialize Vercel Project
      shell: bash
      run: |
        echo "Initializing Vercel project configuration..."
        echo '{
          "projectId": "${{ inputs.VERCEL_PROJECT_ID }}",
          "orgId": null,
          "settings": {}
        }' > .vercel/project.json
        echo "Content of project.json:"
        cat .vercel/project.json

    - name: Pull Vercel Project Configuration
      shell: bash
      env:
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
      run: |
        echo "Pulling Vercel project configuration..."
        vercel pull --yes --token=$VERCEL_TOKEN --cwd .

    - name: Deploy to Vercel
      shell: bash
      env:
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
      if: ${{ inputs.ENVIRONMENT == 'Production' }}
      run: |
        echo "Building project..."
        vercel build --prod --token=$VERCEL_TOKEN
        echo "Deploying to production..."
        vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN